// Mocks generated by Mockito 5.4.4 from annotations
// in sen_gs_1_web/test/connection/retrieve_user_attributes_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:amplify_api/src/api_plugin_impl.dart' as _i9;
import 'package:amplify_api_dart/src/graphql/web_socket/blocs/web_socket_bloc.dart'
    as _i5;
import 'package:amplify_api_dart/src/util/amplify_api_config.dart' as _i11;
import 'package:amplify_auth_cognito/src/auth_plugin_impl.dart' as _i6;
import 'package:amplify_auth_cognito_dart/amplify_auth_cognito_dart.dart'
    as _i4;
import 'package:amplify_auth_cognito_dart/src/state/cognito_state_machine.dart'
    as _i2;
import 'package:amplify_core/amplify_core.dart' as _i3;
import 'package:amplify_core/src/config/amplify_outputs/api_outputs.dart'
    as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCognitoAuthStateMachine_0 extends _i1.SmartFake
    implements _i2.CognitoAuthStateMachine {
  _FakeCognitoAuthStateMachine_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDependencyManager_1 extends _i1.SmartFake
    implements _i3.DependencyManager {
  _FakeDependencyManager_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAmplifyLogger_2 extends _i1.SmartFake implements _i3.AmplifyLogger {
  _FakeAmplifyLogger_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCognitoSignUpResult_3 extends _i1.SmartFake
    implements _i4.CognitoSignUpResult {
  _FakeCognitoSignUpResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCognitoAuthSession_4 extends _i1.SmartFake
    implements _i4.CognitoAuthSession {
  _FakeCognitoAuthSession_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFederateToIdentityPoolResult_5 extends _i1.SmartFake
    implements _i4.FederateToIdentityPoolResult {
  _FakeFederateToIdentityPoolResult_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCognitoSignInResult_6 extends _i1.SmartFake
    implements _i4.CognitoSignInResult {
  _FakeCognitoSignInResult_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCognitoResendSignUpCodeResult_7 extends _i1.SmartFake
    implements _i4.CognitoResendSignUpCodeResult {
  _FakeCognitoResendSignUpCodeResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateUserAttributeResult_8 extends _i1.SmartFake
    implements _i4.UpdateUserAttributeResult {
  _FakeUpdateUserAttributeResult_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmUserAttributeResult_9 extends _i1.SmartFake
    implements _i4.ConfirmUserAttributeResult {
  _FakeConfirmUserAttributeResult_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSendUserAttributeVerificationCodeResult_10 extends _i1.SmartFake
    implements _i4.SendUserAttributeVerificationCodeResult {
  _FakeSendUserAttributeVerificationCodeResult_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdatePasswordResult_11 extends _i1.SmartFake
    implements _i4.UpdatePasswordResult {
  _FakeUpdatePasswordResult_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCognitoResetPasswordResult_12 extends _i1.SmartFake
    implements _i4.CognitoResetPasswordResult {
  _FakeCognitoResetPasswordResult_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCognitoAuthUser_13 extends _i1.SmartFake
    implements _i4.CognitoAuthUser {
  _FakeCognitoAuthUser_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTotpSetupDetails_14 extends _i1.SmartFake
    implements _i4.TotpSetupDetails {
  _FakeTotpSetupDetails_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCognitoDevice_15 extends _i1.SmartFake implements _i4.CognitoDevice {
  _FakeCognitoDevice_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAWSHttpClient_16 extends _i1.SmartFake implements _i3.AWSHttpClient {
  _FakeAWSHttpClient_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketBloc_17 extends _i1.SmartFake implements _i5.WebSocketBloc {
  _FakeWebSocketBloc_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGraphQLOperation_18<T1> extends _i1.SmartFake
    implements _i3.GraphQLOperation<T1> {
  _FakeGraphQLOperation_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestOperation_19 extends _i1.SmartFake implements _i3.RestOperation {
  _FakeRestOperation_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AmplifyAuthCognito].
///
/// See the documentation for Mockito's code generation for more information.
class MockAmplifyAuthCognito extends _i1.Mock
    implements _i6.AmplifyAuthCognito {
  MockAmplifyAuthCognito() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get runtimeTypeName => (super.noSuchMethod(
        Invocation.getter(#runtimeTypeName),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#runtimeTypeName),
        ),
      ) as String);

  @override
  _i2.CognitoAuthStateMachine get stateMachine => (super.noSuchMethod(
        Invocation.getter(#stateMachine),
        returnValue: _FakeCognitoAuthStateMachine_0(
          this,
          Invocation.getter(#stateMachine),
        ),
      ) as _i2.CognitoAuthStateMachine);

  @override
  set stateMachine(_i2.CognitoAuthStateMachine? stateMachine) =>
      super.noSuchMethod(
        Invocation.setter(
          #stateMachine,
          stateMachine,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Category get category => (super.noSuchMethod(
        Invocation.getter(#category),
        returnValue: _i3.Category.analytics,
      ) as _i3.Category);

  @override
  _i3.DependencyManager get dependencies => (super.noSuchMethod(
        Invocation.getter(#dependencies),
        returnValue: _FakeDependencyManager_1(
          this,
          Invocation.getter(#dependencies),
        ),
      ) as _i3.DependencyManager);

  @override
  _i3.AmplifyLogger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeAmplifyLogger_2(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i3.AmplifyLogger);

  @override
  _i8.Future<void> addPlugin(
          {required _i3.AmplifyAuthProviderRepository? authProviderRepo}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPlugin,
          [],
          {#authProviderRepo: authProviderRepo},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> configure({
    _i3.AmplifyOutputs? config,
    required _i3.AmplifyAuthProviderRepository? authProviderRepo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #configure,
          [],
          {
            #config: config,
            #authProviderRepo: authProviderRepo,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i4.CognitoSignUpResult> signUp({
    required String? username,
    required String? password,
    _i4.SignUpOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #username: username,
            #password: password,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.CognitoSignUpResult>.value(
            _FakeCognitoSignUpResult_3(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #username: username,
              #password: password,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.CognitoSignUpResult>);

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i4.CognitoAuthSession> fetchAuthSession(
          {_i4.FetchAuthSessionOptions? options}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAuthSession,
          [],
          {#options: options},
        ),
        returnValue:
            _i8.Future<_i4.CognitoAuthSession>.value(_FakeCognitoAuthSession_4(
          this,
          Invocation.method(
            #fetchAuthSession,
            [],
            {#options: options},
          ),
        )),
      ) as _i8.Future<_i4.CognitoAuthSession>);

  @override
  _i8.Future<_i4.FederateToIdentityPoolResult> federateToIdentityPool({
    required String? token,
    required _i4.AuthProvider? provider,
    _i4.FederateToIdentityPoolOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #federateToIdentityPool,
          [],
          {
            #token: token,
            #provider: provider,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.FederateToIdentityPoolResult>.value(
            _FakeFederateToIdentityPoolResult_5(
          this,
          Invocation.method(
            #federateToIdentityPool,
            [],
            {
              #token: token,
              #provider: provider,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.FederateToIdentityPoolResult>);

  @override
  _i8.Future<void> clearFederationToIdentityPool() => (super.noSuchMethod(
        Invocation.method(
          #clearFederationToIdentityPool,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i4.CognitoSignInResult> signInWithWebUI({
    _i4.AuthProvider? provider,
    _i4.SignInWithWebUIOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithWebUI,
          [],
          {
            #provider: provider,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.CognitoSignInResult>.value(
            _FakeCognitoSignInResult_6(
          this,
          Invocation.method(
            #signInWithWebUI,
            [],
            {
              #provider: provider,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.CognitoSignInResult>);

  @override
  _i8.Future<_i4.CognitoSignUpResult> confirmSignUp({
    required String? username,
    required String? confirmationCode,
    _i4.ConfirmSignUpOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSignUp,
          [],
          {
            #username: username,
            #confirmationCode: confirmationCode,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.CognitoSignUpResult>.value(
            _FakeCognitoSignUpResult_3(
          this,
          Invocation.method(
            #confirmSignUp,
            [],
            {
              #username: username,
              #confirmationCode: confirmationCode,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.CognitoSignUpResult>);

  @override
  _i8.Future<_i4.CognitoResendSignUpCodeResult> resendSignUpCode({
    required String? username,
    _i4.ResendSignUpCodeOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendSignUpCode,
          [],
          {
            #username: username,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.CognitoResendSignUpCodeResult>.value(
            _FakeCognitoResendSignUpCodeResult_7(
          this,
          Invocation.method(
            #resendSignUpCode,
            [],
            {
              #username: username,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.CognitoResendSignUpCodeResult>);

  @override
  _i8.Future<_i4.CognitoSignInResult> signIn({
    required String? username,
    String? password,
    _i4.SignInOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
          {
            #username: username,
            #password: password,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.CognitoSignInResult>.value(
            _FakeCognitoSignInResult_6(
          this,
          Invocation.method(
            #signIn,
            [],
            {
              #username: username,
              #password: password,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.CognitoSignInResult>);

  @override
  _i8.Future<_i4.CognitoSignInResult> confirmSignIn({
    required String? confirmationValue,
    _i4.ConfirmSignInOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSignIn,
          [],
          {
            #confirmationValue: confirmationValue,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.CognitoSignInResult>.value(
            _FakeCognitoSignInResult_6(
          this,
          Invocation.method(
            #confirmSignIn,
            [],
            {
              #confirmationValue: confirmationValue,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.CognitoSignInResult>);

  @override
  _i8.Future<List<_i4.AuthUserAttribute>> fetchUserAttributes(
          {_i4.FetchUserAttributesOptions? options}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserAttributes,
          [],
          {#options: options},
        ),
        returnValue: _i8.Future<List<_i4.AuthUserAttribute>>.value(
            <_i4.AuthUserAttribute>[]),
      ) as _i8.Future<List<_i4.AuthUserAttribute>>);

  @override
  _i8.Future<_i4.UpdateUserAttributeResult> updateUserAttribute({
    required _i4.AuthUserAttributeKey? userAttributeKey,
    required String? value,
    _i4.UpdateUserAttributeOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserAttribute,
          [],
          {
            #userAttributeKey: userAttributeKey,
            #value: value,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.UpdateUserAttributeResult>.value(
            _FakeUpdateUserAttributeResult_8(
          this,
          Invocation.method(
            #updateUserAttribute,
            [],
            {
              #userAttributeKey: userAttributeKey,
              #value: value,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.UpdateUserAttributeResult>);

  @override
  _i8.Future<Map<_i4.CognitoUserAttributeKey, _i4.UpdateUserAttributeResult>>
      updateUserAttributes({
    required List<_i4.AuthUserAttribute>? attributes,
    _i4.UpdateUserAttributesOptions? options,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #updateUserAttributes,
              [],
              {
                #attributes: attributes,
                #options: options,
              },
            ),
            returnValue: _i8.Future<
                    Map<_i4.CognitoUserAttributeKey,
                        _i4.UpdateUserAttributeResult>>.value(
                <_i4.CognitoUserAttributeKey, _i4.UpdateUserAttributeResult>{}),
          ) as _i8.Future<
              Map<_i4.CognitoUserAttributeKey, _i4.UpdateUserAttributeResult>>);

  @override
  _i8.Future<_i4.ConfirmUserAttributeResult> confirmUserAttribute({
    required _i4.AuthUserAttributeKey? userAttributeKey,
    required String? confirmationCode,
    _i4.ConfirmUserAttributeOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmUserAttribute,
          [],
          {
            #userAttributeKey: userAttributeKey,
            #confirmationCode: confirmationCode,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.ConfirmUserAttributeResult>.value(
            _FakeConfirmUserAttributeResult_9(
          this,
          Invocation.method(
            #confirmUserAttribute,
            [],
            {
              #userAttributeKey: userAttributeKey,
              #confirmationCode: confirmationCode,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.ConfirmUserAttributeResult>);

  @override
  _i8.Future<_i4.SendUserAttributeVerificationCodeResult>
      sendUserAttributeVerificationCode({
    required _i4.AuthUserAttributeKey? userAttributeKey,
    _i4.SendUserAttributeVerificationCodeOptions? options,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #sendUserAttributeVerificationCode,
              [],
              {
                #userAttributeKey: userAttributeKey,
                #options: options,
              },
            ),
            returnValue:
                _i8.Future<_i4.SendUserAttributeVerificationCodeResult>.value(
                    _FakeSendUserAttributeVerificationCodeResult_10(
              this,
              Invocation.method(
                #sendUserAttributeVerificationCode,
                [],
                {
                  #userAttributeKey: userAttributeKey,
                  #options: options,
                },
              ),
            )),
          ) as _i8.Future<_i4.SendUserAttributeVerificationCodeResult>);

  @override
  _i8.Future<_i4.UpdatePasswordResult> updatePassword({
    required String? oldPassword,
    required String? newPassword,
    _i4.UpdatePasswordOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [],
          {
            #oldPassword: oldPassword,
            #newPassword: newPassword,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.UpdatePasswordResult>.value(
            _FakeUpdatePasswordResult_11(
          this,
          Invocation.method(
            #updatePassword,
            [],
            {
              #oldPassword: oldPassword,
              #newPassword: newPassword,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.UpdatePasswordResult>);

  @override
  _i8.Future<_i4.CognitoResetPasswordResult> resetPassword({
    required String? username,
    _i4.ResetPasswordOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [],
          {
            #username: username,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.CognitoResetPasswordResult>.value(
            _FakeCognitoResetPasswordResult_12(
          this,
          Invocation.method(
            #resetPassword,
            [],
            {
              #username: username,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.CognitoResetPasswordResult>);

  @override
  _i8.Future<_i4.CognitoResetPasswordResult> confirmResetPassword({
    required String? username,
    required String? newPassword,
    required String? confirmationCode,
    _i4.ConfirmResetPasswordOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmResetPassword,
          [],
          {
            #username: username,
            #newPassword: newPassword,
            #confirmationCode: confirmationCode,
            #options: options,
          },
        ),
        returnValue: _i8.Future<_i4.CognitoResetPasswordResult>.value(
            _FakeCognitoResetPasswordResult_12(
          this,
          Invocation.method(
            #confirmResetPassword,
            [],
            {
              #username: username,
              #newPassword: newPassword,
              #confirmationCode: confirmationCode,
              #options: options,
            },
          ),
        )),
      ) as _i8.Future<_i4.CognitoResetPasswordResult>);

  @override
  _i8.Future<_i4.CognitoAuthUser> getCurrentUser(
          {_i4.GetCurrentUserOptions? options}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
          {#options: options},
        ),
        returnValue:
            _i8.Future<_i4.CognitoAuthUser>.value(_FakeCognitoAuthUser_13(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
            {#options: options},
          ),
        )),
      ) as _i8.Future<_i4.CognitoAuthUser>);

  @override
  _i8.Future<_i4.UserMfaPreference> fetchMfaPreference() => (super.noSuchMethod(
        Invocation.method(
          #fetchMfaPreference,
          [],
        ),
        returnValue: _i8.Future<_i4.UserMfaPreference>.value(
            _i7.dummyValue<_i4.UserMfaPreference>(
          this,
          Invocation.method(
            #fetchMfaPreference,
            [],
          ),
        )),
      ) as _i8.Future<_i4.UserMfaPreference>);

  @override
  _i8.Future<void> updateMfaPreference({
    _i4.MfaPreference? sms,
    _i4.MfaPreference? totp,
    _i4.MfaPreference? email,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMfaPreference,
          [],
          {
            #sms: sms,
            #totp: totp,
            #email: email,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i4.TotpSetupDetails> setUpTotp({_i4.TotpSetupOptions? options}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUpTotp,
          [],
          {#options: options},
        ),
        returnValue:
            _i8.Future<_i4.TotpSetupDetails>.value(_FakeTotpSetupDetails_14(
          this,
          Invocation.method(
            #setUpTotp,
            [],
            {#options: options},
          ),
        )),
      ) as _i8.Future<_i4.TotpSetupDetails>);

  @override
  _i8.Future<void> verifyTotpSetup(
    String? totpCode, {
    _i4.VerifyTotpSetupOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyTotpSetup,
          [totpCode],
          {#options: options},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> rememberDevice() => (super.noSuchMethod(
        Invocation.method(
          #rememberDevice,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> forgetDevice([_i4.AuthDevice? device]) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetDevice,
          [device],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i4.CognitoDevice> fetchCurrentDevice() => (super.noSuchMethod(
        Invocation.method(
          #fetchCurrentDevice,
          [],
        ),
        returnValue: _i8.Future<_i4.CognitoDevice>.value(_FakeCognitoDevice_15(
          this,
          Invocation.method(
            #fetchCurrentDevice,
            [],
          ),
        )),
      ) as _i8.Future<_i4.CognitoDevice>);

  @override
  _i8.Future<List<_i4.CognitoDevice>> fetchDevices() => (super.noSuchMethod(
        Invocation.method(
          #fetchDevices,
          [],
        ),
        returnValue:
            _i8.Future<List<_i4.CognitoDevice>>.value(<_i4.CognitoDevice>[]),
      ) as _i8.Future<List<_i4.CognitoDevice>>);

  @override
  _i8.Future<_i4.CognitoSignOutResult> signOut({_i4.SignOutOptions? options}) =>
      (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
          {#options: options},
        ),
        returnValue: _i8.Future<_i4.CognitoSignOutResult>.value(
            _i7.dummyValue<_i4.CognitoSignOutResult>(
          this,
          Invocation.method(
            #signOut,
            [],
            {#options: options},
          ),
        )),
      ) as _i8.Future<_i4.CognitoSignOutResult>);

  @override
  _i8.Future<void> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  P cast<P extends _i3.AmplifyPluginInterface>() => (super.noSuchMethod(
        Invocation.method(
          #cast,
          [],
        ),
        returnValue: _i7.dummyValue<P>(
          this,
          Invocation.method(
            #cast,
            [],
          ),
        ),
      ) as P);

  @override
  _i8.Future<void> reset() => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  T reifyPluginOptions<T extends _i3.AWSDebuggable>({
    required Object? pluginOptions,
    required T? defaultPluginOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reifyPluginOptions,
          [],
          {
            #pluginOptions: pluginOptions,
            #defaultPluginOptions: defaultPluginOptions,
          },
        ),
        returnValue: _i7.dummyValue<T>(
          this,
          Invocation.method(
            #reifyPluginOptions,
            [],
            {
              #pluginOptions: pluginOptions,
              #defaultPluginOptions: defaultPluginOptions,
            },
          ),
        ),
      ) as T);
}

/// A class which mocks [AmplifyAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockAmplifyAPI extends _i1.Mock implements _i9.AmplifyAPI {
  MockAmplifyAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get runtimeTypeName => (super.noSuchMethod(
        Invocation.getter(#runtimeTypeName),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#runtimeTypeName),
        ),
      ) as String);

  @override
  Map<_i3.APIAuthorizationType<_i3.AmplifyAuthProvider>, _i3.APIAuthProvider>
      get authProviders => (super.noSuchMethod(
            Invocation.getter(#authProviders),
            returnValue: <_i3.APIAuthorizationType<_i3.AmplifyAuthProvider>,
                _i3.APIAuthProvider>{},
          ) as Map<_i3.APIAuthorizationType<_i3.AmplifyAuthProvider>,
              _i3.APIAuthProvider>);

  @override
  _i3.Category get category => (super.noSuchMethod(
        Invocation.getter(#category),
        returnValue: _i3.Category.analytics,
      ) as _i3.Category);

  @override
  _i3.DependencyManager get dependencies => (super.noSuchMethod(
        Invocation.getter(#dependencies),
        returnValue: _FakeDependencyManager_1(
          this,
          Invocation.getter(#dependencies),
        ),
      ) as _i3.DependencyManager);

  @override
  _i8.Future<void> addPlugin(
          {required _i3.AmplifyAuthProviderRepository? authProviderRepo}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPlugin,
          [],
          {#authProviderRepo: authProviderRepo},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> reset() => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> configure({
    _i3.AmplifyOutputs? config,
    required _i3.AmplifyAuthProviderRepository? authProviderRepo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #configure,
          [],
          {
            #config: config,
            #authProviderRepo: authProviderRepo,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i3.AWSHttpClient getHttpClient(
    _i10.ApiType? type, {
    String? apiName,
    _i3.APIAuthorizationType<_i3.AmplifyAuthProvider>? authorizationMode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHttpClient,
          [type],
          {
            #apiName: apiName,
            #authorizationMode: authorizationMode,
          },
        ),
        returnValue: _FakeAWSHttpClient_16(
          this,
          Invocation.method(
            #getHttpClient,
            [type],
            {
              #apiName: apiName,
              #authorizationMode: authorizationMode,
            },
          ),
        ),
      ) as _i3.AWSHttpClient);

  @override
  _i5.WebSocketBloc createWebSocketBloc(_i11.EndpointConfig? endpoint) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWebSocketBloc,
          [endpoint],
        ),
        returnValue: _FakeWebSocketBloc_17(
          this,
          Invocation.method(
            #createWebSocketBloc,
            [endpoint],
          ),
        ),
      ) as _i5.WebSocketBloc);

  @override
  _i3.GraphQLOperation<T> query<T>({required _i3.GraphQLRequest<T>? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [],
          {#request: request},
        ),
        returnValue: _FakeGraphQLOperation_18<T>(
          this,
          Invocation.method(
            #query,
            [],
            {#request: request},
          ),
        ),
      ) as _i3.GraphQLOperation<T>);

  @override
  _i3.GraphQLOperation<T> mutate<T>(
          {required _i3.GraphQLRequest<T>? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #mutate,
          [],
          {#request: request},
        ),
        returnValue: _FakeGraphQLOperation_18<T>(
          this,
          Invocation.method(
            #mutate,
            [],
            {#request: request},
          ),
        ),
      ) as _i3.GraphQLOperation<T>);

  @override
  _i8.Stream<_i3.GraphQLResponse<T>> subscribe<T>(
    _i3.GraphQLRequest<T>? request, {
    void Function()? onEstablished,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [request],
          {#onEstablished: onEstablished},
        ),
        returnValue: _i8.Stream<_i3.GraphQLResponse<T>>.empty(),
      ) as _i8.Stream<_i3.GraphQLResponse<T>>);

  @override
  _i3.RestOperation delete(
    String? path, {
    _i3.HttpPayload? body,
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_19(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #body: body,
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i3.RestOperation);

  @override
  _i3.RestOperation get(
    String? path, {
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_19(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i3.RestOperation);

  @override
  _i3.RestOperation head(
    String? path, {
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_19(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i3.RestOperation);

  @override
  _i3.RestOperation patch(
    String? path, {
    _i3.HttpPayload? body,
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_19(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #body: body,
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i3.RestOperation);

  @override
  _i3.RestOperation post(
    String? path, {
    _i3.HttpPayload? body,
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_19(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #body: body,
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i3.RestOperation);

  @override
  _i3.RestOperation put(
    String? path, {
    _i3.HttpPayload? body,
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_19(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #body: body,
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i3.RestOperation);

  @override
  void registerAuthProvider(_i3.APIAuthProvider? authProvider) =>
      super.noSuchMethod(
        Invocation.method(
          #registerAuthProvider,
          [authProvider],
        ),
        returnValueForMissingStub: null,
      );

  @override
  P cast<P extends _i3.AmplifyPluginInterface>() => (super.noSuchMethod(
        Invocation.method(
          #cast,
          [],
        ),
        returnValue: _i7.dummyValue<P>(
          this,
          Invocation.method(
            #cast,
            [],
          ),
        ),
      ) as P);

  @override
  T reifyPluginOptions<T extends _i3.AWSDebuggable>({
    required Object? pluginOptions,
    required T? defaultPluginOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reifyPluginOptions,
          [],
          {
            #pluginOptions: pluginOptions,
            #defaultPluginOptions: defaultPluginOptions,
          },
        ),
        returnValue: _i7.dummyValue<T>(
          this,
          Invocation.method(
            #reifyPluginOptions,
            [],
            {
              #pluginOptions: pluginOptions,
              #defaultPluginOptions: defaultPluginOptions,
            },
          ),
        ),
      ) as T);
}

/// A class which mocks [AmplifyAuthProviderRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAmplifyAuthProviderRepository extends _i1.Mock
    implements _i3.AmplifyAuthProviderRepository {
  MockAmplifyAuthProviderRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  T? getAuthProvider<T extends _i3.AmplifyAuthProvider>(
          _i3.AmplifyAuthProviderToken<T>? token) =>
      (super.noSuchMethod(Invocation.method(
        #getAuthProvider,
        [token],
      )) as T?);

  @override
  void registerAuthProvider<T extends _i3.AmplifyAuthProvider>(
    _i3.AmplifyAuthProviderToken<T>? token,
    _i3.AmplifyAuthProvider? authProvider,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerAuthProvider,
          [
            token,
            authProvider,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
